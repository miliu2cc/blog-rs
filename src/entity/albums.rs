//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1



use sea_orm :: entity :: prelude :: * ; use serde :: { Deserialize , Serialize } ;

# [derive (Clone , Debug , PartialEq , DeriveEntityModel , Eq , Serialize , Deserialize)] # [sea_orm (table_name = "albums")] pub struct Model { # [sea_orm (primary_key)] pub id : i32 , pub cover_url : Option < String > , # [sea_orm (column_type = "Text" , nullable)] pub description : Option < String > , pub created_at : Option < DateTimeUtc > , pub updated_at : Option < DateTimeUtc > , }

# [derive (Copy , Clone , Debug , EnumIter , DeriveRelation)] pub enum Relation { # [sea_orm (has_many = "super::photos::Entity")] Photos , }

impl Related < super :: photos :: Entity > for Entity { fn to () -> RelationDef { Relation :: Photos . def () } }

impl ActiveModelBehavior for ActiveModel { }